{"version":3,"sources":["img/aqi_shanghai.png","img/colorgame.png","img/ds.png","img/heatmap.png","img/markercluster.png","img/random_quote.png","img/todo_list.png","img/wes.png","Tile.js","Images.js","Project.js","About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Tile","className","src","this","props","alt","text","href","link","target","rel","github","Component","Images","colorgame","todo_list","random_quote","aqi_shanghai","heatmap","markercluster","wes","ds","Project","About","App","exact","to","activeClassName","path","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.28d63c4b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/aqi_shanghai.28952463.png\";","module.exports = __webpack_public_path__ + \"static/media/colorgame.7cf920fb.png\";","module.exports = __webpack_public_path__ + \"static/media/ds.19505c09.png\";","module.exports = __webpack_public_path__ + \"static/media/heatmap.505d2d80.png\";","module.exports = __webpack_public_path__ + \"static/media/markercluster.b7e24b87.png\";","module.exports = __webpack_public_path__ + \"static/media/random_quote.21d863f6.png\";","module.exports = __webpack_public_path__ + \"static/media/todo_list.b8aa2102.png\";","module.exports = __webpack_public_path__ + \"static/media/wes.9890b022.png\";","import React, { Component } from 'react';\nimport './Tile.css';\n\nclass Tile extends Component {\n    render() {\n        return (\n            <div className=\"Tile\">\n                <img className=\"Tile-img\" src={this.props.src} alt={this.props.text}></img>\n                <p>{this.props.text}</p>\n                <span>\n                    <a href={this.props.link} target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fa fa-link\"> play online </i></a>\n                    <span> | </span>\n                    <a href={this.props.github} target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fab fa-github\"></i></a>\n                </span>\n            </div>\n        );\n    }\n}\n\nexport default Tile;","import aqi_shanghai from './img/aqi_shanghai.png';\nimport colorgame from './img/colorgame.png';\nimport ds from './img/ds.png';\nimport heatmap from './img/heatmap.png';\nimport markercluster from './img/markercluster.png';\n// import patatap from './img/patatap.png';\nimport random_quote from './img/random_quote.png';\nimport todo_list from './img/todo_list.png';\nimport wes from './img/wes.png';\n\nconst Images =[\n    colorgame,\n    todo_list,\n    random_quote,\n    aqi_shanghai,\n    heatmap,\n    markercluster,\n    wes,\n    ds\n];\n\nexport default Images;","import React, { Component } from 'react';\nimport Tile from './Tile';\nimport Images from './Images';\n\nimport './Project.css';\n\nclass Project extends Component {\n    render() {\n        return (\n            <div>\n                <div className=\"project-tile\">\n                    <Tile src={Images[0]} text=\"Color Game\" link=\"http://casey0808.github.io/web_development/color_game/colorGame.html\" github=\"https://github.com/casey0808/web_development\" />\n                    <Tile src={Images[1]} text=\"Todo List App\" link=\"https://casey0808.github.io/todo-list/\" github=\"https://github.com/casey0808/todo-list\" />\n                    <Tile src={Images[2]} text=\"Random Quote Machine\" link=\"https://elated-wing-438675.netlify.com/\" github=\"https://github.com/casey0808/fcc-random-quote-machine\" />\n                    <Tile src={Images[3]} text=\"Interactive Graph of AQI\" link=\"http://casey0808.github.io/aqi_shanghai/pm25_sh.html\" github=\"https://github.com/casey0808/aqi_shanghai\" />\n                    <Tile src={Images[4]} text=\"Data Visualization with D3\" link=\"https://casey0808.github.io/fcc-data-visualization/\" github=\"https://github.com/casey0808/fcc-data-visualization\" />\n                    <Tile src={Images[5]} text=\"Geospatial Data Visualization\" link=\"https://cancui.work/real_estate_study/\" github=\"https://github.com/casey0808/real_estate_study\" />\n                    <Tile src={Images[6]} text=\"Wes Anderson Palette\" link=\"http://casey0808.github.io/wes-anderson-palette\" github=\"https://github.com/casey0808/wes-anderson-palette\" />\n                    <Tile src={Images[7]} text=\"Data Science Projects\" link=\"https://cancui.work/datacamp_projects/\" github=\"https://github.com/casey0808/datacamp_projects\" />\n                </div>\n                <a className=\"button\" href=\"https://casey0808.github.io/project.html\" target=\"_blank\" rel=\"noopener noreferrer\">See More >></a>\n            </div>\n        );\n    }\n}\n\nexport default Project;","import React, { Component } from 'react';\nimport './About.css';\n\nclass About extends Component {\n    render() {\n        return (\n            <div className=\"About\">\n                <h2><i className=\"fa fa-user-circle\"></i> About Me </h2>\n                <div>I am Casey, currently living in Shanghai. </div>\n                <div>I worked as a data analyst for almost two years, and recently switched to front-end developer.</div>\n                <div>With passion for data visualization and web development, I want to combine the knowledge of both fields, </div>\n                <div>create aesthetic and user-friendly websites, and showcase data in better ways.</div>\n                <h2>Get in touch</h2>\n                <span>\n                    <a className=\"profile-link\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/casey0808\"><i className=\"fab fa-github\"></i></a>\n                    <a className=\"profile-link\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.linkedin.com/in/cancui1208\"><i className=\"fab fa-linkedin\"></i></a>\n                    <a className=\"profile-link\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"mailto: casey_c0808@outlook.com\"><i className=\"fa fa-envelope\"></i></a>\n                </span>            \n            </div>\n        );\n    }\n}\n\nexport default About;","import React from 'react';\nimport { Route, Switch, NavLink } from 'react-router-dom';\nimport Project from './Project';\nimport About from './About';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <nav className=\"navbar\">\n        <h2 className=\"header\">Casey C</h2>\n        <NavLink exact to=\"/\" activeClassName=\"active-nav\" className=\"nav-text\">Project</NavLink>\n        <NavLink exact to=\"/about\" activeClassName=\"active-nav\" className=\"nav-text\">About</NavLink>        \n      </nav>\n      <Switch className=\"main\">\n        <Route exact path=\"/\" render={() => <Project />} />\n        <Route exact path=\"/About\" render={() => <About />} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, \n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}